{"version":3,"sources":["reducers/index.jsx","store/index.jsx","counter/index.jsx","App.js","index.js"],"names":["INCREMENT","DECREMENT","store","createStore","state","action","type","Counter","props","incrementIfOdd","value","onIncrement","incrementAsync","setTimeout","this","onDecrement","className","onClick","Component","App","useSelector","dispatch","useDispatch","getState","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAMA,EAAY,YACZC,EAAY,YCELC,EAAQC,aDCN,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCAClC,OAAQA,EAAOC,MACX,KAAKN,EACD,OAAOI,EAAQ,EACnB,KAAKH,EACD,OAAOG,EAAQ,EACnB,QACI,OAAOA,M,oCEgCJG,E,kDAxCX,WAAYC,GAAO,IAAD,8BACd,gBAGJC,eAAiB,WACV,EAAKD,MAAME,MAAQ,IAAM,GACxB,EAAKF,MAAMG,eAND,EAUlBC,eAAiB,WACbC,WAAW,EAAKL,MAAMG,YAAa,MAXrB,E,0CAclB,WACI,MAA4CG,KAAKN,MAAzCE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaI,EAA5B,EAA4BA,YAC5B,OACI,oBAAGC,UAAU,OAAb,UACI,sBAAKA,UAAU,UAAf,sBAAmCN,EAAnC,YACC,IACD,wBAASM,UAAU,MAAMC,QAASN,EAAlC,eAGC,IACD,wBAAQM,QAASF,EAAjB,eAGC,IACD,wBAAQE,QAASH,KAAKL,eAAtB,8BAGC,IACD,wBAAQQ,QAASH,KAAKF,eAAtB,oC,GAjCMM,a,OCsBPC,EAlBL,WACRC,aAAa,SAAAhB,GAAK,OAAIA,KACtB,IAAMiB,EAASC,cAUb,OACE,cAAC,EAAD,CAASZ,MAAOR,EAAMqB,WACtBZ,YAXe,WACjBa,QAAQC,IAAI,aACZJ,EAAS,CAAEf,KAAM,eAUfS,YAPgB,WAClBS,QAAQC,IAAI,aACZJ,EAAS,CAAEf,KAAM,kBCTrBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAU1B,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIF2B,SAASC,eAAe,W","file":"static/js/main.f47d2436.chunk.js","sourcesContent":["const INCREMENT = 'INCREMENT';\r\nconst DECREMENT = 'DECREMENT'\r\n\r\n\r\nexport default (state = 0, action) => {\r\n    switch (action.type){\r\n        case INCREMENT:\r\n            return state + 1\r\n        case DECREMENT:\r\n            return state - 1\r\n        default: \r\n            return state\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport reducer from \"../reducers/index\";\r\n\r\nexport const store = createStore(reducer);","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    constructor(props){\r\n        super();\r\n    }\r\n\r\n    incrementIfOdd = () => {\r\n        if(this.props.value % 2 !== 0) {\r\n            this.props.onIncrement()\r\n        }\r\n    }\r\n\r\n    incrementAsync = () => {\r\n        setTimeout(this.props.onIncrement, 2000)\r\n    }\r\n\r\n    render() {\r\n        const { value, onIncrement, onDecrement } = this.props\r\n        return (\r\n            <p className=\"text\">\r\n                <div className=\"clicker\">Clicked: {value} times</div>\r\n                {' '}\r\n                <button  className=\"btn\" onClick={onIncrement}>\r\n                    +\r\n                </button>\r\n                {' '}\r\n                <button onClick={onDecrement}>\r\n                    -\r\n                </button>\r\n                {' '}\r\n                <button onClick={this.incrementIfOdd}>\r\n                    Increment if odd\r\n                </button>\r\n                {' '}\r\n                <button onClick={this.incrementAsync}>\r\n                    Increment async\r\n                </button>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from 'react';\nimport './App.css'; \nimport { store } from \"./store/index\";\nimport Counter from './counter/index'\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst App=()=> {\n  useSelector (state => state)\n  const dispatch=useDispatch()\n const onIncrement = () => {\n    console.log(\"INCREMENT\");\n    dispatch({ type: 'INCREMENT' })\n  }\n\n  const onDecrement = () => {\n    console.log(\"DECREMENT\");\n    dispatch({ type: \"DECREMENT\" }) //usedispatch\n  }\n    return (\n      <Counter value={store.getState()} //useselector\n      onIncrement={onIncrement}\n      onDecrement={onDecrement} />\n    );\n}\nexport default App; //don't need","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  App  from './App';\nimport { store } from './store/index';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);"],"sourceRoot":""}